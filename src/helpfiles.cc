#include <vector>
#include <string>
using namespace std;
vector<string> donorsrc_table;
vector<string> eucbhelp_table;
void makeHelpTables()
{
donorsrc_table.push_back("RESI ALA         ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI ARG         ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HE NE   ");
donorsrc_table.push_back("DONOR HH11 NH1   ");
donorsrc_table.push_back("DONOR HH12 NH1   ");
donorsrc_table.push_back("DONOR HH21 NH2   ");
donorsrc_table.push_back("DONOR HH22 NH2   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("ACCEPTOR OT1 C   ");
donorsrc_table.push_back("ACCEPTOR OT1 C   ");
donorsrc_table.push_back("RESI ASN          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HD21 ND2   ");
donorsrc_table.push_back("DONOR HD22 ND2   ");
donorsrc_table.push_back("ACCEPTOR OD1 CG   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI ASP         ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR OD1 CG   ");
donorsrc_table.push_back("ACCEPTOR OD2 CG   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("ACCEPTOR OT1 C   ");
donorsrc_table.push_back("RESI CYS          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HG1 SG   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI GLN         ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HT1 NT   ");
donorsrc_table.push_back("DONOR HT2 NT   ");
donorsrc_table.push_back("DONOR HE21 NE2   ");
donorsrc_table.push_back("DONOR HE22 NE2   ");
donorsrc_table.push_back("ACCEPTOR OE1 CD   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI GLU         ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR OE1 CD   ");
donorsrc_table.push_back("ACCEPTOR OE2 CD   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI GLY          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("ACCEPTOR OT1 C   ");
donorsrc_table.push_back("ACCEPTOR OT2 C   ");
donorsrc_table.push_back("RESI HSD ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HD1 ND1   ");
donorsrc_table.push_back("ACCEPTOR NE2   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI HSE         ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HE2 NE2   ");
donorsrc_table.push_back("ACCEPTOR ND1   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI HSP         ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HD1 ND1   ");
donorsrc_table.push_back("DONOR HE2 NE2   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI ILE          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI LEU          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("ACCEPTOR OT1 C   ");
donorsrc_table.push_back("ACCEPTOR OT2 C   ");
donorsrc_table.push_back("RESI LYS          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HZ1 NZ   ");
donorsrc_table.push_back("DONOR HZ2 NZ   ");
donorsrc_table.push_back("DONOR HZ3 NZ   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI MET          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI PHE          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("ACCEPTOR OY C   ");
donorsrc_table.push_back("RESI PRO          ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("ACCEPTOR OT1 OC   ");
donorsrc_table.push_back("ACCEPTOR OT1 OC   ");
donorsrc_table.push_back("RESI SER          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HG1 OG   ");
donorsrc_table.push_back("ACCEPTOR OG   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI THR          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("DONOR HT2 N   ");
donorsrc_table.push_back("DONOR HT2 N   ");
donorsrc_table.push_back("DONOR HG1 OG1   ");
donorsrc_table.push_back("ACCEPTOR OG1   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI TRP          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HE1 NE1   ");
donorsrc_table.push_back("ACCEPTOR OT1 OC   ");
donorsrc_table.push_back("ACCEPTOR OT1 OC   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI TYR          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("DONOR HT1 N   ");
donorsrc_table.push_back("DONOR HT2 N   ");
donorsrc_table.push_back("DONOR HT2 N   ");
donorsrc_table.push_back("DONOR HH OH  ");
donorsrc_table.push_back("ACCEPTOR OH   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI VAL          ");
donorsrc_table.push_back("DONOR HN N   ");
donorsrc_table.push_back("ACCEPTOR O C   ");
donorsrc_table.push_back("RESI TIP3         ");
donorsrc_table.push_back("DONOR H1  OH2  ");
donorsrc_table.push_back("DONOR H2  OH2  ");
donorsrc_table.push_back("ACCEPTOR OH2 X");
eucbhelp_table.push_back("OPTION -help");
eucbhelp_table.push_back("Print a help screen to the screen and terminate.");
eucbhelp_table.push_back("ARGUMENTS: name, where name is the name of a particular command ");
eucbhelp_table.push_back("that the user wants help.");
eucbhelp_table.push_back("OPTION -group1");
eucbhelp_table.push_back("Specify the first teamfile to be used for the -distance facility.");
eucbhelp_table.push_back("ARGUMENTS: teamfile, where teamfile is the name of a file describing");
eucbhelp_table.push_back("a valid teamfile. The parameter teamfile can have also the values");
eucbhelp_table.push_back("aromatic, aliphatic, positive or negative.");
eucbhelp_table.push_back("OPTION -group2");
eucbhelp_table.push_back("Specify the second teamfile to be used for the -distance facility.");
eucbhelp_table.push_back("ARGUMENTS: teamfile, where teamfile is the name of a file describing");
eucbhelp_table.push_back("a valid teamfile. The parameter teamfile can have also the values");
eucbhelp_table.push_back("aromatic, aliphatic, positive or negative.");
eucbhelp_table.push_back("OPTION -psf");
eucbhelp_table.push_back("Specify the psf file to be used. The user MUST provide this parameter.");
eucbhelp_table.push_back("ARGUMENTS: filename, where filename is the name of the psf file.");
eucbhelp_table.push_back("OPTION -dcd");
eucbhelp_table.push_back("Specify the dcd file to be used. Teh user MUST provide this parameter.");
eucbhelp_table.push_back("ARGUMENTS: filename, where filename is the name of the dcd file.");
eucbhelp_table.push_back("OPTION -seq");
eucbhelp_table.push_back("Set the sequence where the search will be applied. This option affects");
eucbhelp_table.push_back("the last search enabled. ");
eucbhelp_table.push_back("ARGUMENTS: seqlist, where seqlist is a comma separated list of ");
eucbhelp_table.push_back("sequnces such as P:I1-I2 where P is a chain and I1, I2 residue numbers.");
eucbhelp_table.push_back("OPTION -cutoff");
eucbhelp_table.push_back("Set the critical search parameters.");
eucbhelp_table.push_back("ARGUMENTS:  distance,percent,angle. The argument distance ");
eucbhelp_table.push_back("specifies the critical distance (default 5.5)");
eucbhelp_table.push_back("The argument percent specifies the critical percent (default 0.05) ");
eucbhelp_table.push_back("and the argument angle the critical angle (default 120).");
eucbhelp_table.push_back("OPTION -first");
eucbhelp_table.push_back("Set the first frame of the dcd file that will be used. ");
eucbhelp_table.push_back("ARGUMENTS: frame, where frame is a positive integer. ");
eucbhelp_table.push_back("The default value is 1.");
eucbhelp_table.push_back("OPTION -last");
eucbhelp_table.push_back("Set the last frame of the dcd file that will be used. ");
eucbhelp_table.push_back("ARGUMENTS: frame, where frame is a positive integer. ");
eucbhelp_table.push_back("The default value is INT_MAX.");
eucbhelp_table.push_back("OPTION -skip");
eucbhelp_table.push_back("Set the frames of the dcd file to be skipped.");
eucbhelp_table.push_back("ARGUMENTS: count, where count is a positive integer.");
eucbhelp_table.push_back("The default value is no skip (1).");
eucbhelp_table.push_back("OPTION -tors");
eucbhelp_table.push_back("Enable the search for dihedral angles. The user MUST ");
eucbhelp_table.push_back("provide a sequence to search using the -seq option.");
eucbhelp_table.push_back("ARGUMENTS: angle_list, where angle_list is a comma");
eucbhelp_table.push_back("separated list of phi, psi, omega, chi1 or the ");
eucbhelp_table.push_back("wildcards all, sidechain, backbone.");
eucbhelp_table.push_back("OPTION -hbonds");
eucbhelp_table.push_back("Enable the search for hydrogen bonds. The user could");
eucbhelp_table.push_back("provide a sequence to search using the -seq option.");
eucbhelp_table.push_back("OPTION -smart");
eucbhelp_table.push_back("Specify the parameters for smart search.");
eucbhelp_table.push_back("ARGUMENTS: skip,distance where skip speficies the amount of ");
eucbhelp_table.push_back("frames to be skipped and the argument distance the distance that ");
eucbhelp_table.push_back("will be used in the comparisons.");
eucbhelp_table.push_back("OPTION -donor");
eucbhelp_table.push_back("Enable the search for donors if it is provided before acceptors");
eucbhelp_table.push_back("and the search for acceptors otherwise.");
eucbhelp_table.push_back("ARGUMENTS: don_list, where don_list is a comma separated list");
eucbhelp_table.push_back("of the values backbone, sidechain, water, protein, all.");
eucbhelp_table.push_back("OPTION -acceptor");
eucbhelp_table.push_back("Enable the search for acceptors if it is provided before donors");
eucbhelp_table.push_back("and the search for donors otherwise.");
eucbhelp_table.push_back("ARGUMENTS: acc_list, where acc_list is a comma separated list");
eucbhelp_table.push_back("of the values backbone, sidechain, water, protein, all.");
eucbhelp_table.push_back("OPTION -rmsf");
eucbhelp_table.push_back("Enable the rmsf printing.");
eucbhelp_table.push_back("OPTION -res");
eucbhelp_table.push_back("ARGUMENTS: aminoacid list.");
eucbhelp_table.push_back("OPTION -bturn");
eucbhelp_table.push_back("Enable the beta turn search facility. The user could provide");
eucbhelp_table.push_back("a sequence to search using the -seq option.");
eucbhelp_table.push_back("ARGUMENTS: percent,distance,angle.");
eucbhelp_table.push_back("OPTION -distance");
eucbhelp_table.push_back("ARGUMENTS:atom1-atom2.");
eucbhelp_table.push_back("OPTION -angle");
eucbhelp_table.push_back("ARGUMENTS:atom1-atom2-atom3.");
eucbhelp_table.push_back("OPTION -dihedral");
eucbhelp_table.push_back("ARGUMENTS:atom1-atom2-atom3-atom4.");
eucbhelp_table.push_back("OPTION -stack");
eucbhelp_table.push_back("Enable the search stacking facility. ");
eucbhelp_table.push_back("ARGUMENTS: percent,distance,angle.");
eucbhelp_table.push_back("OPTION -watbridge");
eucbhelp_table.push_back("Enable the search for water bridges. The user could provide ");
eucbhelp_table.push_back("a sequence to search using the -seq option.");
eucbhelp_table.push_back("OPTION -psfanal");
eucbhelp_table.push_back("Analyze the psf file displaying information about it. The ");
eucbhelp_table.push_back("user can constrain the analysis providing a sequence ");
eucbhelp_table.push_back("with the -seq option.");
eucbhelp_table.push_back("OPTION -salt3");
eucbhelp_table.push_back("Enable the complex salt search facility. The user should provide");
eucbhelp_table.push_back("a sequnce to search using the -seq option.");
eucbhelp_table.push_back("OPTION -salt2");
eucbhelp_table.push_back("Enable the salt search facility. The user should provide");
eucbhelp_table.push_back("a sequnce to search using the -seq option.");
eucbhelp_table.push_back("OPTION -noe");
eucbhelp_table.push_back("Enable the noe search facility. The user should provide a sequence");
eucbhelp_table.push_back("using the -seq option. ");
eucbhelp_table.push_back("OPTION -hist");
eucbhelp_table.push_back("Enable or disable the histogram printing. This option affects all");
eucbhelp_table.push_back("search options such as dihedrals, distances etc.");
eucbhelp_table.push_back("ARGUMENTS: value, where value can be 1 (enable the histograms) or");
eucbhelp_table.push_back("0 (disable the histograms).");
eucbhelp_table.push_back("OPTION -side1");
eucbhelp_table.push_back("Set the first side team for the side dist facility. ");
eucbhelp_table.push_back("ARGUMENTS: string, where string can be aromatic, aliphatic, positive, negative.");
eucbhelp_table.push_back("OPTION -side2");
eucbhelp_table.push_back("Set the second side team for the side dist facility. ");
eucbhelp_table.push_back("ARGUMENTS: string, where string can be aromatic, aliphatic, positive, negative.");
eucbhelp_table.push_back("OPTION -bindist");
eucbhelp_table.push_back("Set the value of bindistance.");
eucbhelp_table.push_back("ARGUMENTS: value, where value is a double prevision value.");
eucbhelp_table.push_back("OPTION -binangle");
eucbhelp_table.push_back("Set the value of binangle.");
eucbhelp_table.push_back("ARGUMENTS: value, where value is a double prevision value.");
eucbhelp_table.push_back("OPTION -bindihe");
eucbhelp_table.push_back("Set the value of bindihedral.");
eucbhelp_table.push_back("ARGUMENTS: value, where value is a double prevision value.");
eucbhelp_table.push_back("OPTION -aroHN");
eucbhelp_table.push_back("Enable the aroHN facility.");
eucbhelp_table.push_back("ARGUMENTS: percent,distance,angle.");
eucbhelp_table.push_back("OPTION -aropos");
eucbhelp_table.push_back("Enable the aropos facility.");
eucbhelp_table.push_back("ARGUMENTS: percent,distance,angle.");
eucbhelp_table.push_back("OPTION -avenoe");
eucbhelp_table.push_back("Specify the NOE averaging factor.");
eucbhelp_table.push_back("ARGUMENTS: distance");
eucbhelp_table.push_back("OPTION -JHNHA");
eucbhelp_table.push_back("Compute 3J HN-HA coupling constant (Karplus relation).");
eucbhelp_table.push_back("ARGUMENTS: a,b,c.");
eucbhelp_table.push_back("OPTION -aroHC");
eucbhelp_table.push_back("Enable the aroHC facility.");
eucbhelp_table.push_back("ARGUMENTS: percent,distance,angle.");
eucbhelp_table.push_back("OPTION -pdb");
eucbhelp_table.push_back("Specify the pdb file to be used for statistics.");
eucbhelp_table.push_back("ARGUMENTS: the name of the pdb file.");
eucbhelp_table.push_back("OPTION -rmsd");
eucbhelp_table.push_back("Enable the rmsd search.");
eucbhelp_table.push_back("ARGUMENTS:  none.");
eucbhelp_table.push_back("OPTION -smooth");
eucbhelp_table.push_back("Enable the smoothing printing of .sda files.");
eucbhelp_table.push_back("ARGUMENTS: smooth_start, smooth_end");
eucbhelp_table.push_back("OPTION -center1");
eucbhelp_table.push_back("Enable the first centroid.");
eucbhelp_table.push_back("ARGUMENTS: ca, backbone, backbone3, backbone4");
eucbhelp_table.push_back("OPTION -center2");
eucbhelp_table.push_back("Enable the second centroid.");
eucbhelp_table.push_back("ARGUMENTS: ca, backbone, backbone3, backbone4");
eucbhelp_table.push_back("OPTION -pdbwrite");
eucbhelp_table.push_back("Write the dcd coordinates into pdb files.");
eucbhelp_table.push_back("OPTION -pdbtors");
eucbhelp_table.push_back("Enable the search for dihedral angles versus pdb angles. The user MUST ");
eucbhelp_table.push_back("provide a sequence to search using the -seq option.");
eucbhelp_table.push_back("ARGUMENTS: angle_list, where angle_list is a comma");
eucbhelp_table.push_back("separated list of phi, psi, omega, chi1 or the ");
eucbhelp_table.push_back("wildcards all, sidechain, backbone.");
eucbhelp_table.push_back("OPTION -watbridge1");
eucbhelp_table.push_back("Set the first watbridge sequence to search using a -seq command.");
eucbhelp_table.push_back("OPTION -watbridge2 ");
eucbhelp_table.push_back("Set the second watbridge sequence to search  using a -seq command.");
eucbhelp_table.push_back("OPTION -weight");
eucbhelp_table.push_back("Enable the use of weights in centers and groups of distances and ");
eucbhelp_table.push_back("torsions.");
eucbhelp_table.push_back("OPTION -pdo");
eucbhelp_table.push_back("Enable the pdo facility.");
eucbhelp_table.push_back("ARGUMENTS: level, where level a greater than 0 integer value.");
eucbhelp_table.push_back("OPTION -contact1 ");
eucbhelp_table.push_back("Specify the first contact group.");
eucbhelp_table.push_back("ARGUMENTS: One of all,ca,backbone3,backbone4,backbone,sidechain");
eucbhelp_table.push_back("OPTION -contact2 ");
eucbhelp_table.push_back("Specify the second contact group.");
eucbhelp_table.push_back("ARGUMENTS: One of all,ca,backbone3,backbone4,backbone,sidechain");
eucbhelp_table.push_back("OPTION -resdiff");
eucbhelp_table.push_back("Specify the residue difference in search.");
eucbhelp_table.push_back("ARGUMENTS: d, where d a positive number.");
eucbhelp_table.push_back("OPTION -hydrosolve");
eucbhelp_table.push_back("Find the hydro solve waters.");
eucbhelp_table.push_back("ARGUMENTS: p,d,a ");
eucbhelp_table.push_back("OPTION -resname");
eucbhelp_table.push_back("Specify the residue names in the seq strings.");
eucbhelp_table.push_back("ARGUMENTS: res1,res2,...");
eucbhelp_table.push_back("OPTION -atomname");
eucbhelp_table.push_back("Specify the atom names in the seq strings.");
eucbhelp_table.push_back("ARGUMENTS: atom1,atom2,...");
eucbhelp_table.push_back("OPTION -atomtype");
eucbhelp_table.push_back("Specify the atom types in the seq strings.");
eucbhelp_table.push_back("ARGUMENTS: type1,type2,...");
eucbhelp_table.push_back("OPTION -hpc");
eucbhelp_table.push_back("Search for the closest waters in a series of aminoacids.");
eucbhelp_table.push_back("OPTION -iwcn");
eucbhelp_table.push_back("ARGUMENTS: distance");
eucbhelp_table.push_back("Implements the iwcn search facility.");
eucbhelp_table.push_back("OPTION -cor");
eucbhelp_table.push_back("ARGUMENTS: astep");
eucbhelp_table.push_back("Sets the parameters for the correlation matrix.");
eucbhelp_table.push_back("OPTION -block");
eucbhelp_table.push_back("ARGUMENTS: statcount");
eucbhelp_table.push_back("Specify the number of frames for statistics printing.");
eucbhelp_table.push_back("OPTION -mol");
eucbhelp_table.push_back("ARGUMENTS: molecule name");
eucbhelp_table.push_back("Specify the molecule that will be used.");
eucbhelp_table.push_back("OPTION -ahelix");
eucbhelp_table.push_back("ARGUMENTS: ahelix percent");
eucbhelp_table.push_back("Enable the helix search.");
eucbhelp_table.push_back("OPTION -watpdb");
eucbhelp_table.push_back("Enable the pdb printing with waters.");
eucbhelp_table.push_back("ARGUMENTS: distance");
eucbhelp_table.push_back("OPTION -clusterrmsd");
eucbhelp_table.push_back("Enable the cluster rmsd search.");
eucbhelp_table.push_back("ARGUMENTS: a double precision number as the limit for the clusters.");
eucbhelp_table.push_back("OPTION -entropy");
eucbhelp_table.push_back("Enable the entropy search facility.");
eucbhelp_table.push_back("ARGUMENTS: number of frames to print entropy,temperature.");
eucbhelp_table.push_back("OPTION -dcdwrite");
eucbhelp_table.push_back("Enable the writing slices of the original dcd to files.");
eucbhelp_table.push_back("ARGUMENTS: The name of the dcd file to print.");
eucbhelp_table.push_back("OPTION -par");
eucbhelp_table.push_back("Set the parameter file.");
eucbhelp_table.push_back("ARGUMENTS: The name of the parameter file.");
eucbhelp_table.push_back("OPTION -energy");
eucbhelp_table.push_back("Print energy values using the parameter file specified with the -par option.");
eucbhelp_table.push_back("ARGUMENTS: s, where s could be total, bond, angle, dihed,imprp,elect,vdw.");
eucbhelp_table.push_back("OPTION -elect");
eucbhelp_table.push_back("ARGUMENTS: e, float number.");
eucbhelp_table.push_back("Specify the dielectric constant (default 1.0).");
eucbhelp_table.push_back("OPTION -v");
eucbhelp_table.push_back("Print version information.");
eucbhelp_table.push_back("OPTION -sasa");
eucbhelp_table.push_back("ARGUMENTS: p, double precision number.");
eucbhelp_table.push_back("Enables the sasa search facility.");
eucbhelp_table.push_back("OPTION -disu");
eucbhelp_table.push_back("ARGUMENTS: none");
eucbhelp_table.push_back("Enables the search for disulfides connections.");
eucbhelp_table.push_back("OPTION -ref");
eucbhelp_table.push_back("ARGUMENTS: ref frame (integer).");
eucbhelp_table.push_back("Sets the reference frame.");
eucbhelp_table.push_back("OPTION -hbonds1 ");
eucbhelp_table.push_back("ARGUMENTS: none");
eucbhelp_table.push_back("Enables the hbond facility.");
eucbhelp_table.push_back("OPTION -hbonds2");
eucbhelp_table.push_back("ARGUMENTS: none");
eucbhelp_table.push_back("Enables the hbond  facility.");
}
